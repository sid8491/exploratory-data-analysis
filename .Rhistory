?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country = "US")
filter(cran, country == "IN" | country == "US")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version != is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version, ip_id))
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, size > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month) , data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month , data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot.R")
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLables.R")
myedit("myLabels.R")
pathtofile("myLabels.R", local = TRUE)
source(pathtofile(("myLabels.R"), local = TRUE)
)
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
swirl()
swirl()
sample(colors())
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(sqe(0,1,len=6))
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
xyplot(x,y,pch=19,col = rgb(0,.5,.5))
plot(x, y, pch=19, col = rgb(0,.5,.5))
plot(x, y, pch=19, col = rgb(0,.5,.5, .3))
cols <- brewer.pal(3, "BuGn")
showMe("cols")
showMe(cols())
showMe(cols
)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
exit()
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data =  mpg)
qplot(displ, hwy, data =  mpg, color = drv)
qplot(displ, hwy, data =  mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data =  mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = 3)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = "point", facets = .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
ssummary(g)
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha  1/2)
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm")
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year))) + facet_grid(drv~cyl, margins = TRUE)
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, ccolor = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth())
qplot(carat, price, data = diamonds, color = cut, geom_smooth)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
plot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
g
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, pice)) + geom_boxplot() + facet_grid(. ~ cut)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
quit
quit()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
library(datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g + geom_point()
library(ggplot2)
library(datasets)
head(mpg)
ggplot(data = mpg, aes(displ, hyw)) + geom_point()
ggplot(data = mpg, aes(displ, hwy)) + geom_point()
ggplot(data = mpg, aes(displ, hwy), color = drv) + geom_point()
ggplot(data = mpg, aes(displ, hwy, color = drv)) + geom_point()
ggplot(data = mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
ggplot(data = mpg, aes(hwy, color = drv)) + geom_bar()
ggplot(data = mpg, aes(hwy, color = drv, fill = drv)) + geom_bar()
ggplot(data = mpg, aes(hwy, fill = drv)) + geom_bar()
ggplot(data = mpg, aes(displ, hwy), facet(.~drv)) + geom_point()
ggplot(data = mpg, aes(displ, hwy), facet = .~drv) + geom_point()
ggplot(data = mpg, aes(displ, hwy)) + geom_point(facet(.~drv))
ggplot(data = mpg, aes(displ, hwy)) + geom_point(aes(facet(.~drv)))
ggplot(data = mpg, aes(displ, hwy)) + geom_point()
ggplot(data = mpg, aes(hwy)) + geom_bar()
ggplot(data = mpg, aes(hwy, facet = . ~ drv)) + geom_bar()
ggplot(data = mpg, aes(hwy), facet = .~drv) + geom_bar()
head(maacs)
library(maacs)
ggplot(data = mpg, aes(hwy)) + geom_bar() + facet_grid(.~drv)
ggplot(data = mpg, aes(hwy)) + geom_bar() + facet_grid(drv~.)
ggplot(data = mpg, aes(displ, hwy)) + geom_point() + facet_grid(.~drv)
ggplot(data = mpg, aes(displ, hwy)) + geom_point() + facet_grid(drv~.)
ggplot(data = mpg, aes(displ, hwy)) + geom_point() + facet_grid(drv~.) + geom_smooth(method = "lm")
ggplot(data = mpg, aes(displ, hwy)) + geom_point() + facet_grid(drv~.) + geom_smooth()
ggplot(data = mpg, aes(displ, hwy)) + geom_point(aes(color = class)) + facet_grid(drv~.) + geom_smooth()
library(swirl)
swirl()
dist(dataFrame)
distxy
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=.4, col = "blue")
abline(h=.4, col = "red")
5
5
12
abline(h=.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
plot(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, cols1[newClust])
points(x, y, pch = 19, cex = 2, cols1[newClust)
points(x, y, pch = 19, cex = 2, cols1[newClust])
points(x, y, pch = 19, cex = 2, cols1)
points(x, y)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8,  cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv) %*% diag
matu
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
svd1$u[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
c(m:n)
svd1$v
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562,563])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
x
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- sub1[,10:12]
mdist <- dist(sub1[,10:12])
hcustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(maxCon, 10:12)])
mdist <- dist(sub1[,c(1012,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
hclustering
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, '|', TRUE)
cnames <- strsplit(cnames, '|', TRUE)
cnames
names(pm0) <- make.names(cnames[[1]wcol])
names(pm0) <- make.names(cnames[[1][wcol]])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
as.Date(as.character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
strr(site0)
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, (State.code == 36 & county.site %in% both))
cnt0 <- subset(pm0, (pm0$State.Code == 36 & pm0$county.site %in% both))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- sample()
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(lwd = 2, na.rm = TRUE)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, "state")
dim(mrg)
head(mrg)
dim(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
dim(mrg)
with(mrg, points(rep(2, 52), mrg[, 3]))
dim(mrg)
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
source('~/R Codes/exdata_data_NEI_data/plot2.R')
setwd("~/R Codes/exdata_data_NEI_data")
source('~/R Codes/exdata_data_NEI_data/plot2.R')
View(SCC)
View(NEI.baltimore)
View(NEI)
library(ggplot2)
barplot(height = NEI.baltimore.agg, names.arg = names(NEI.baltimore.agg), col = NEI$type, xlab = "Years", ylab = expression ("Total" ~ PM[2.5] ~"Emissions (tons)"), main = expression("Total" ~ PM[2.5] ~ "Emissions of Baltimore City by Year"))
x <- tapply(NEI.baltimore$Emissions, NEI.baltimore$year, NEI.baltimore$type, sum)
x <- tapply(NEI.baltimore$Emissions, NEI.baltimore$year + NEI.baltimore$type, sum)
x <- aggregate(NEI.baltimore$Emissions, NEI.baltimore$year + NEI.baltimore$type, sum)
x <- aggregate(NEI.baltimore$Emissions ~ NEI.baltimore$year + NEI.baltimore$type, sum)
x <- aggregate(NEI.baltimore$Emissions, list( NEI.baltimore$year + NEI.baltimore$type), sum)
x <- aggregate(Emissions ~ year + type, NEI.baltimore, sum)
View(x)
g <- ggplot(x, aes(year, Emissions, color = type))
g <- g + geom_line()
g
g <- g + geom_bar()
g
g <- g + geom_point()
g
g <- g + geom_line()
g
g
g <- ggplot(x, aes(year, Emissions, color = type))
g <- g + geom_line()
g
g <- ggplot(x, aes(year, Emissions, color = type), xlab("Year"), ylab(expression("Total" ~ PM[2.5] ~ "Emissions (in tons)")), main = "abcd")
g <- g + geom_line()
g
rm(g)
ggplot(x, aes(year, Emissions, color = type), xlab("Year"), ylab(expression("Total" ~ PM[2.5] ~ "Emissions (in tons)"))) + geom_line()
rm(g)
ggplot(x, aes(year, Emissions, color = type)) + geom_line(xlab("Year"), ylab(expression("Total" ~ PM[2.5] ~ "Emissions (in tons)")))
ggplot(x, aes(year, Emissions, color = type)) + geom_line(xlab = "Year", ylab = expression("Total" ~ PM[2.5] ~ "Emissions (in tons)"))
ggplot(x, aes(year, Emissions, color = type), xlab = "Year", ylab = expression("Total" ~ PM[2.5] ~ "Emissions (in tons)")) + geom_line()
source('~/R Codes/exdata_data_NEI_data/plot3.R')
r(x)
rm(x)
rm(NEI.type)
rm(NEI.baltimore)
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
View(NEI.type)
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
source('~/R Codes/exdata_data_NEI_data/plot3.R')
